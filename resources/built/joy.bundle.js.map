{"version":3,"sources":["webpack:///webpack/bootstrap ee2553f3ba9d4f7cccdd","webpack:///./src/tokens.ts","webpack:///./src/editor.ts","webpack:///./src/engine.ts","webpack:///./src/lexer.ts","webpack:///./src/utility.ts","webpack:///./src/primitives.ts","webpack:///./src/joylibs.ts"],"names":[],"mappings":"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","file":"joy.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ee2553f3ba9d4f7cccdd","/**\n * Token values for Lexer\n */\n\nexport enum Token {\n    EOF,\n    WHITESPACE,\n    DOT,\n    COLON,\n    SEMICOLON,\n    SINGLE_QUOTE,\n    L_BRACKET,\n    R_BRACKET,\n    L_CURLY,\n    R_CURLY,\n    LIBRA,\n    DEFINE,\n    COMMENT,\n    STRING,\n    QUOTED_STRING,\n    NEWLINE,\n    ERROR,\n    EQEQ,\n    IDENTIFIER,\n    UNKNOWN\n}\n\nexport interface StrToTok {\n    [key: string]: Token;\n}\n\nexport const keywords: StrToTok = {\n    \"LIBRA\": Token.LIBRA,\n    \"DEFINE\": Token.DEFINE,\n};\n\nexport interface TokToStr {\n    [key: string]: string;\n}\n\nexport const tokToStr: TokToStr = {\n    LIBRA: \"LIBRA\",\n    DEFINE: \"DEFINE\",\n    EQEQ: \"==\",\n    L_BRACKET: \"[\",\n    R_BRACKET: \"]\",\n    SEMICOLON: \";\",\n    DOT: \".\",\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tokens.ts","// Joy Language Editor\r\n\r\nimport * as $ from \"jquery\";\r\nimport { Joy } from \"./engine\";\r\n\r\nexport class Editor {\r\n    // Structure is represented as nodes with 'next', 'prev' and 'parent'.\r\n    // Lists have 'first' and 'last'. First in lists is Nil.\r\n    // Cursor follows node.\r\n    // Root nodes have no parent. First/last nodes have no prev/next.\r\n\r\n    public joy: Joy;\r\n    private root: any;\r\n    private cursor: any;\r\n    private selection: any;\r\n\r\n    constructor() {\r\n        this.joy = new Joy();\r\n        this.root = { type: \"Nil\" };\r\n        this.cursor = this.root;\r\n        this.selection = { from: null, to: null };\r\n    }\r\n\r\n    Root = function () {\r\n        return this.root;\r\n    };\r\n\r\n    Cursor = function () {\r\n        return this.cursor;\r\n    };\r\n\r\n    Selection = function () {\r\n        var from = this.selection.from;\r\n        var to = this.selection.to;\r\n\r\n        function _switch() {\r\n            var n = from;\r\n            do {\r\n                if (n == to) return false;\r\n                n = n.next;\r\n            } while (n);\r\n            return true;\r\n        }\r\n\r\n        if (_switch()) {\r\n            return { from: to, to: this.selection.from };\r\n        }\r\n\r\n        return this.selection;\r\n    };\r\n\r\n    HasSelection = function () {\r\n        return this.selection.from || this.selection.to;\r\n    }\r\n\r\n    SelectAll = function () {\r\n        if (this.root.next) {\r\n            this.selection.from = this.root.next;\r\n            var to = this.selection.from;\r\n            while (to.next) to = to.next;\r\n            this.selection.to = to;\r\n            this.cursor = to;\r\n        }\r\n    };\r\n\r\n    SelectNone = function () {\r\n        this.selection.from = this.selection.to = null;\r\n    };\r\n\r\n    InsertWord = function (name: string) {\r\n        var k = kind(name);\r\n        this.SelectNone();\r\n        // var f = this.cursor;\r\n        var next = this.cursor.next;\r\n        var word = { type: \"Word\", kind: k, name: name, prev: this.cursor, next: next, parent: this.cursor.parent };\r\n        if (!next && word.parent)\r\n            word.parent.last = word;\r\n        this.cursor.next = word;\r\n        if (next) next.prev = word;\r\n        this.cursor = word;\r\n    };\r\n\r\n    InsertList = function () {\r\n        this.SelectNone();\r\n        var nil: { type: string, parent: any } = { type: \"Nil\", parent: null };\r\n        // var f = this.cursor;\r\n        var next = this.cursor.next;\r\n        var list = { type: \"List\", first: nil, last: nil, prev: this.cursor, next: next, parent: this.cursor.parent };\r\n        nil.parent = list;\r\n        if (!next && list.parent)\r\n            list.parent.last = list;\r\n        this.cursor.next = list;\r\n        if (next) next.prev = list;\r\n        this.cursor = nil;\r\n    };\r\n\r\n    // TODO: Simplify below once stepIn/stepOut usage is known\r\n\r\n    extendSelection(to: any, dir: any) {\r\n        if (this.selection.from == to) {\r\n            this.selection.from = this.selection.to = null;\r\n            return;\r\n\r\n        }\r\n\r\n        if (!this.selection.from)\r\n            this.selection.from = to;\r\n\r\n        if (this.selection.to == to)\r\n            this.selection.to = dir;\r\n        else\r\n            this.selection.to = to;\r\n    }\r\n\r\n    MovePrev = function (stepIn: boolean, stepOut: boolean, select: boolean) {\r\n        if (select) stepIn = stepOut = false; // Not allowed while selecting\r\n        else this.SelectNone();\r\n        // var f = this.cursor;\r\n        if (stepIn && this.cursor.type == \"List\") {\r\n            this.cursor = this.cursor.last;\r\n            return true;\r\n        }\r\n        else if (this.cursor.prev) {\r\n            if (select) this.extendSelection(this.cursor, this.cursor.prev);\r\n            this.cursor = this.cursor.prev;\r\n            return true;\r\n        }\r\n        else if (stepOut && this.cursor.parent) {\r\n            this.cursor = this.cursor.parent.prev;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    MoveNext = function (stepIn: boolean, stepOut: boolean, select: boolean) {\r\n        if (select) stepIn = stepOut = false; // Not allowed while selecting\r\n        else this.SelectNone();\r\n        // var f = this.cursor;\r\n        if (this.cursor.next) {\r\n            this.cursor = this.cursor.next;\r\n            if (stepIn && this.cursor.type == \"List\")\r\n                this.cursor = this.cursor.first;\r\n            if (select) this.extendSelection(this.cursor, this.cursor.next);\r\n            return true;\r\n        }\r\n        else if (stepOut && this.cursor.parent) {\r\n            this.cursor = this.cursor.parent;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    DeletePrev = function (stepIn: boolean, stepOut: boolean) {\r\n        if (this.HasSelection()) {\r\n            // TODO: Identical to other Delete*\r\n            var s = this.Selection(); // Normalized\r\n            this.cursor = s.from.prev;\r\n            this.cursor.next = s.to.next;\r\n            if (this.cursor.next)\r\n                this.cursor.next.prev = this.cursor;\r\n            this.SelectNone();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.MovePrev(stepIn, stepOut)) {\r\n                if (this.cursor.next) this.cursor.next = this.cursor.next.next;\r\n                if (this.cursor.next) this.cursor.next.prev = this.cursor;\r\n                if (!this.cursor.next && this.cursor.parent)\r\n                    this.cursor.parent.last = this.cursor;\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    DeleteNext = function (stepIn: boolean, stepOut: boolean) {\r\n        if (this.HasSelection()) {\r\n            // TODO: Identical to other Delethiste*\r\n            var s = this.Selection(); // Normalized\r\n            this.cursor = s.from.prev;\r\n            this.cursor.next = s.to.next;\r\n            if (this.cursor.next)\r\n                this.cursor.next.prev = this.cursor;\r\n            this.SelectNone();\r\n        }\r\n        else {\r\n            if (this.MoveNext(stepIn, stepOut)) {\r\n                return this.DeletePrev(stepIn, stepOut);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n} // Editor\r\n\r\n// Render\r\n\r\nlet token: string = \"\";\r\nlet inQuote: boolean = false;\r\nlet last: number = 0;\r\nlet editor: Editor = new Editor();\r\n\r\nfunction _escape(str: string) {\r\n    return str; // TODO: Breaks rendering of >, <, words and </b> turns into a comment?!\r\n    //return str.replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\").replace(\"&\", \"&amp;\");\r\n}\r\n\r\nfunction render(cursorFn: CursorFn) {\r\n    var cursor = editor.Cursor();\r\n    var selection = editor.Selection();\r\n    var from = selection.from;\r\n    var to = selection.to;\r\n\r\n    function _render(node: any, html: string): string {\r\n        function _cursor() {\r\n            if (node && node == cursor)\r\n                return cursorFn();\r\n            else\r\n                return \"\";\r\n        }\r\n\r\n        function _selectionFrom() {\r\n            if (node == from)\r\n                return \"<span class='selected'>\";\r\n            else\r\n                return \"\";\r\n        }\r\n\r\n        function _selectionTo() {\r\n            if (node == to)\r\n                return \"</span>\";\r\n            else\r\n                return \"\";\r\n        }\r\n\r\n        if (node) {\r\n            switch (node.type) {\r\n                case \"List\":\r\n                    return _render(node.next, html + _selectionFrom() + \"<span class='list'>\" +\r\n                        _render(node.first, \"\") + \"</span>\" + _selectionTo() + _cursor());\r\n                case \"Word\":\r\n                    return _render(node.next, html + _selectionFrom() + \"<span class='\" +\r\n                        node.kind + \"'>\" + _escape(node.name) + \"</span>\" + _selectionTo() + _cursor());\r\n                case \"Nil\":\r\n                    return _render(node.next, html + _selectionFrom() + (node.next ? \"\" : \"&nbsp;\") +\r\n                        _selectionTo() + _cursor());\r\n                default:\r\n                    return html;\r\n            }\r\n        }\r\n        else {\r\n            return html;\r\n        }\r\n    }\r\n\r\n    $(\"#input\").empty().append(_render(editor.Root(), \"\"));\r\n}\r\n\r\nfunction code(from: any, to: any) {\r\n    var abort = false;\r\n\r\n    function _code(node: any, out: any): any {\r\n        if (node) {\r\n            switch (node.type) {\r\n                case \"List\":\r\n                    out += \"[ \" + _code(node.first, \"\") + \"] \";\r\n                    if (abort) return out;\r\n                    break;\r\n                case \"Word\":\r\n                    out += _escape(node.name) + \" \";\r\n                    break;\r\n                case \"Nil\":\r\n                    break;\r\n            }\r\n            if (node == to) {\r\n                abort = true;\r\n                return out;\r\n            }\r\n            else {\r\n                return _code(node.next, out);\r\n            }\r\n        }\r\n        else {\r\n            return out;\r\n        }\r\n    }\r\n    return _code(from, \"\");\r\n}\r\n\r\n// Input\r\n\r\nfunction complete(token: any) {\r\n    if (kind(token) == \"unknown\") {\r\n        var words = editor.joy.words();\r\n        for (var w in words) {\r\n            var d = words[w];\r\n            if (d.substr(0, token.length) == token)\r\n                return d;\r\n        }\r\n    }\r\n    if (\"true\".substr(0, token.length) == token) return \"true\"; // Note: Not all completions are dictionary words\r\n    if (\"false\".substr(0, token.length) == token) return \"false\";\r\n    if (token.substr(0, 1) == '\"' && (token.length == 1 || token.substr(token.length - 1, 1) != '\"')) return token + '\"';\r\n    return token;\r\n}\r\n\r\nfunction lookup(token: any) {\r\n    var words = editor.joy.words();\r\n    for (var w in words) {\r\n        if (words[w] == token) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction kind(token: any) {\r\n    try {\r\n        var t = typeof (eval(token));\r\n        switch (t) {\r\n            case \"string\":\r\n            case \"number\":\r\n            case \"boolean\":\r\n                return t;\r\n            default:\r\n                throw \"Unknown kind: '\" + token + \"'\";\r\n        }\r\n    }\r\n    catch (ex) {\r\n        if (lookup(token))\r\n            return editor.joy.word(token).kind;\r\n        else\r\n            return \"unknown\";\r\n    }\r\n}\r\n\r\nfunction update() {\r\n    if ($(\"#dropdown-search\").is(\":focus\")) return;\r\n\r\n    render(function () {\r\n        if (token.length > 0) {\r\n            return \"<span class='\" + kind(complete(token)) + \"'>\" + _escape(token) + \"<span class='cursor'>|</span><span class='complete'>\" + complete(token).substr(token.length) + \"</span></span>\";\r\n        }\r\n        else {\r\n            return token + \"<span class='cursor'>|</span>\";\r\n        }\r\n    });\r\n\r\n    let root = editor.Root();\r\n    let cursor = editor.Cursor();\r\n    var c = code(root, cursor);\r\n    // var c = code(editor.Root(), editor.Cursor());\r\n    $(\"#output\").empty().append(c);\r\n    editor.joy.reset();\r\n    if (c.trim() == \"words\") {\r\n        editor.joy.execute(c);\r\n    } else {\r\n        editor.joy.execute(c);\r\n    }\r\n\r\n    var ctx = editor.joy.getStack();\r\n    $(\"#context\").empty();\r\n    for (var i = 0; i < ctx.Stack.length; i++) {\r\n        var s = ctx.Stack[i];\r\n        $(\"#context\").append(\"<div class='stack'/>\").append(editor.joy.print([s]));\r\n    }\r\n\r\n    $(\"#error\").empty();\r\n    $(\"#error\").append(\"<div class='stack'/>\").append(editor.joy.print([editor.joy.getErrors()]));\r\n}\r\n\r\n$(document).keydown(function (e) {\r\n    if ($(\"#dropdown-search\").is(\":focus\")) return;\r\n    \r\n    switch (e.which) {\r\n        case 8: // Backspace\r\n            e.preventDefault();\r\n            if (token.length > 0)\r\n                token = token.substr(0, token.length - 1);\r\n            else\r\n                editor.DeletePrev(false, false);\r\n            break;\r\n        case 46: // Delete\r\n            e.preventDefault();\r\n            editor.DeleteNext(false, false);\r\n            break;\r\n        case 37: // <-\r\n            e.preventDefault();\r\n            if (e.altKey) {\r\n                if (!editor.MovePrev(false, false, e.shiftKey || false)) // At first already?\r\n                    editor.MovePrev(false, true, e.shiftKey || false); // Step out\r\n                while (editor.MovePrev(false, false, e.shiftKey || false)); // Move to first\r\n            }\r\n            else {\r\n                editor.MovePrev(e.ctrlKey || false, true, e.shiftKey || false);\r\n            }\r\n            break;\r\n        case 39: // ->\r\n            e.preventDefault();\r\n            if (e.altKey) {\r\n                if (!editor.MoveNext(false, false, e.shiftKey || false)) // At first already?\r\n                    editor.MoveNext(false, true, e.shiftKey || false); // Step out\r\n                while (editor.MoveNext(false, false, e.shiftKey || false)); // Move to first\r\n            }\r\n            else {\r\n                editor.MoveNext(e.ctrlKey || false, true, e.shiftKey || false);\r\n            }\r\n            break;\r\n        case 65: // CTRL-A - Select All\r\n            if (e.ctrlKey) {\r\n                e.preventDefault();\r\n                editor.SelectAll();\r\n            }\r\n            break;\r\n    }\r\n    $(document).focus(); // Prompts and alerts steal focus\r\n    update();\r\n});\r\n\r\n$(document).keypress(function (e) {\r\n    if ($(\"#dropdown-search\").is(\":focus\")) return;\r\n    \r\n    e.preventDefault();\r\n    if (inQuote) {\r\n        switch (e.which) {\r\n            case 34: // \"\r\n                if (last != 92 /* \\ */) {\r\n                    inQuote = false;\r\n                    token += '\"';\r\n                    token = complete(token);\r\n                    editor.InsertWord(token);\r\n                    token = \"\";\r\n                }\r\n                else {\r\n                    token += '\"';\r\n                }\r\n                break;\r\n            default:\r\n                if (e.which >= 32) // not control char\r\n                    token += String.fromCharCode(e.which);\r\n                break;\r\n        }\r\n        last = e.which;\r\n    }\r\n    else { // !inQuote\r\n        switch (e.which) {\r\n            case 32: // space\r\n                if (token.length > 0) {\r\n                    token = complete(token);\r\n                    editor.InsertWord(token);\r\n                    token = \"\";\r\n                }\r\n                break;\r\n            case 34: // \"\r\n                if (token.length == 0)\r\n                    inQuote = true;\r\n                token += '\"';\r\n                break;\r\n            case 91: // [\r\n                if (token.length == 0) {\r\n                    e.preventDefault();\r\n                    editor.InsertList();\r\n                }\r\n                else {\r\n                    token += '[';\r\n                }\r\n                break;\r\n            case 93: // [\r\n                if (token.length == 0) {\r\n                    e.preventDefault();\r\n                    editor.MoveNext(true, true, false);\r\n                }\r\n                else {\r\n                    token += ']';\r\n                }\r\n                break;\r\n            default:\r\n                if (e.which >= 32) { // not control char\r\n                    token += String.fromCharCode(e.which);\r\n                    editor.SelectNone();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    update();\r\n});\r\n\r\n$(document).ready(function () {\r\n    update();\r\n});\r\n\r\n/*\r\n- Not allowing definitions containing literal values\r\n- Completion bug (fixed) with \"2bi\"\r\n\r\nTODO:\r\n- Quote/Unquote\r\n- Copy/Paste\r\n*/\r\n\r\nexport interface CursorFn {\r\n    (): string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/editor.ts","// Joy Language Engine\r\n\r\nimport { Lexer } from \"./lexer\"\r\nimport { Token, tokToStr } from \"./tokens\"\r\nimport { initialJoyprimitives } from \"./primitives\"\r\nimport { loadCoreLibries } from \"./joylibs\"\r\n\r\nexport class Joy {\r\n\r\n    // state variables\r\n    private dictionary: { [key: string]: any[] }\r\n    private errors: string[]\r\n    private results: string[]\r\n    private context: { Stack: any[] }\r\n    private defines: any\r\n    private displayConsole: string[]\r\n\r\n    constructor() {\r\n        this.dictionary = {}\r\n        this.errors = []\r\n        this.results = []\r\n        this.context = { Stack: [] }\r\n        this.defines = {}\r\n        this.displayConsole = []\r\n        initialJoyprimitives(this)\r\n        loadCoreLibries(this)\r\n    }\r\n\r\n    public assertStack(length: number) {\r\n        if (this.context.Stack.length < length) {\r\n            this.errors.push('Stack underflow!');\r\n        }\r\n    }\r\n\r\n    // error display functions\r\n    public pushError = function (errorText: string) {\r\n        this.errors.push(errorText);\r\n    };\r\n    public getErrors = function () {\r\n        return this.errors;\r\n    };\r\n    public clearErrors = function () {\r\n        this.errors = [];\r\n    };\r\n\r\n    // result display from execution of '.' command\r\n    public pushResult = function (result: string) {\r\n        this.results.push(result);\r\n    };\r\n    public getResults = function () {\r\n        return this.results;\r\n    };\r\n    public clearResults = function () {\r\n        this.results = [];\r\n    };\r\n\r\n    // display console, contains all results and console joy functions like 'putchars'\r\n    public concatDisplayConsole = function (displayText: string) {\r\n        this.displayConsole = this.displayConsole.concat(displayText);\r\n    };\r\n    public getDisplayConsole = function () {\r\n        return this.displayConsole;\r\n    };\r\n    public clearDisplayConsole = function () {\r\n        this.displayConsole = [];\r\n    };\r\n\r\n    // lex the joy source string\r\n    lex(source: string) {\r\n        if (this.errors.length > 0) {\r\n            return [];\r\n        }\r\n\r\n        function isWhitespace(c: string) {\r\n            return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t' || c === '\\f';\r\n        }\r\n        const s1 = source\r\n            .replace(/\\[/g, ' [ ')\r\n            .replace(/\\]/g, ' ] ')\r\n            .replace(/;/g, ' ; ');\r\n        const s2 = `${s1} `;\r\n        const tokens = [];\r\n        let tok = '';\r\n        let str = false;\r\n        let last = '';\r\n        for (let i = 0; i < s2.length; i += 1) {\r\n            const c = s2[i];\r\n            if (str) {\r\n                tok += c;\r\n                if (c === '\"' && last !== '\\\\') {\r\n                    tokens.push(tok);\r\n                    tok = '';\r\n                    str = false;\r\n                }\r\n                last = c;\r\n            } else {\r\n                const emptyTok = tok.length === 0;\r\n                if (isWhitespace(c)) {\r\n                    if (!emptyTok) {\r\n                        tokens.push(tok);\r\n                        tok = '';\r\n                    }\r\n                } else {\r\n                    if (emptyTok && c === '\"') {\r\n                        str = true;\r\n                    }\r\n                    tok += c;\r\n                }\r\n            }\r\n        }\r\n        if (tok.length > 0) this.errors.push(`Incomplete string token: '${tok}'`);\r\n\r\n        return tokens;\r\n    }\r\n\r\n    literal(val: string) {\r\n        if (val.length > 1 && val[0] === '\"' && val[val.length - 1] === '\"') {\r\n            const lit = val.slice(1, val.length - 1);\r\n            return { kind: 'literal', disp: lit, val: lit };\r\n        }\r\n        return { kind: 'literal', disp: val, val: Number(val) };\r\n    }\r\n\r\n    error(token: string) {\r\n        const e: any = function () {\r\n            this.errors.push(`Undefined word: '${token}'`);\r\n        };\r\n        e.kind = 'error';\r\n        e.disp = token;\r\n        return e;\r\n    }\r\n\r\n    public word(token: string) {\r\n        const w = this.dictionary[token];\r\n        if (w) {\r\n            return w;\r\n        }\r\n        try {\r\n            return this.literal(token);\r\n        } catch (ex) {\r\n            return this.error(token);\r\n        }\r\n    }\r\n\r\n    parse(tokens: string[]) {\r\n        const ast: any = [];\r\n        ast.kind = 'list';\r\n        while (tokens.length > 0) {\r\n            const t = tokens.shift();\r\n            switch (t) {\r\n                case '[':\r\n                    ast.push(this.parse(tokens));\r\n                    break;\r\n                case ']':\r\n                    return ast;\r\n                case '$':\r\n                case 'append':\r\n                case 'empty':\r\n                    this.pushError(`t = ${t}`);\r\n                    break;\r\n                default:\r\n                    if (t !== undefined)\r\n                        ast.push(this.word(t));\r\n                    break;\r\n            }\r\n        }\r\n        return ast;\r\n    }\r\n\r\n    compile(quote: any) {\r\n        return function (j: Joy) {\r\n            for (let i = 0; i < quote.length; i += 1) {\r\n                const w = quote[i];\r\n                if (typeof w === 'function') w(j);\r\n                else if (w.kind === 'list') j.context.Stack.unshift(w);\r\n                else if (w.kind === 'literal') j.context.Stack.unshift(w.val);\r\n                else j.errors.push(`Unexpected kind: ${w.kind}`);\r\n            }\r\n        };\r\n    }\r\n\r\n    public print(ast: any): string {\r\n        let output = '';\r\n        switch (typeof ast) {\r\n            case 'number':\r\n            case 'string':\r\n            case 'boolean':\r\n                return ast;\r\n            case 'object':\r\n                for (let i = 0; i < ast.length; i += 1) {\r\n                    const a = ast[i];\r\n                    if (a.kind === 'list') {\r\n                        output += `[ ${this.print(a)}] `;\r\n                    } else if (a.disp) {\r\n                        output += `${a.disp} `;\r\n                    } else {\r\n                        output += `${a} `;\r\n                    }\r\n                }\r\n                return output;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    escape(str: string) {\r\n        return str\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/'/g, '&apos;')\r\n            .replace(/\"/g, '&quot;');\r\n    }\r\n\r\n    render(ast: any) {\r\n        let html = '';\r\n        for (let i = 0; i < ast.length; i += 1) {\r\n            const a = ast[i];\r\n            if (a.kind === 'list') { html += `<span class='list'>${this.render(a)}</span>`; } else html += `<span class='${a.kind}'>${this.escape(a.disp)}</span>`;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    public define(quote: any, name: string) {\r\n        const c: any = this.compile(quote);\r\n        c.kind = 'secondary';\r\n        c.disp = name;\r\n        this.dictionary[name] = c;\r\n    }\r\n\r\n    public words = function () {\r\n        const w: string[] = [];\r\n        Object.keys(this.dictionary).forEach((key) => {\r\n            w.push(key);\r\n        });\r\n        return w;\r\n    };\r\n\r\n    // non primitive function definitions for display\r\n    storeIfDefine(tokens: string[]) {\r\n        // const tokens = this.lex(source);\r\n        const len = tokens.length;\r\n        if (len < 5 || tokens[len - 1] !== 'define') {\r\n            return;\r\n        }\r\n        const newSource = tokens.slice(1, len - 3).reduce((s, tok) => `${s} ${tok}`);\r\n        const name: string = tokens[len - 2].replace(/\"/g, '');\r\n        this.defines[name] = newSource;\r\n    }\r\n    public getDefines = function () {\r\n        return this.defines;\r\n    };\r\n\r\n\r\n    public primitive = function (name: string, func: any) {\r\n        // const f = func;\r\n        const newWord: any = function (j: Joy) {\r\n            const len = func.length;\r\n            j.assertStack(len);\r\n            const args = j.context.Stack.slice(0, len).reverse(); // TODO: more efficient that slice/reverse\r\n            j.context.Stack = j.context.Stack.slice(len);\r\n            const result = func(...args);\r\n            if (result) {\r\n                if (result.kind === 'tuple') {\r\n                    for (let i = 0; i < result.length; i += 1) {\r\n                        j.context.Stack.unshift(result[i]);\r\n                    }\r\n                } else {\r\n                    j.context.Stack.unshift(result);\r\n                }\r\n            }\r\n        };\r\n        newWord.kind = 'primitive';\r\n        newWord.disp = name;\r\n        this.dictionary[name] = newWord;\r\n        return newWord;\r\n    };\r\n\r\n    public reset = function () {\r\n        this.context = { Stack: [] };\r\n    };\r\n\r\n    public pushStack = function (val: any) {\r\n        if (val !== null && val !== undefined) this.context.Stack.unshift(val);\r\n    };\r\n\r\n    public peekStack = function () {\r\n        this.assertStack(1);\r\n        return this.context.Stack[0];\r\n    };\r\n\r\n    public popStack = function () {\r\n        this.assertStack(1);\r\n        return this.context.Stack.shift();\r\n    };\r\n\r\n    public getStack = function () {\r\n        return this.context;\r\n    };\r\n\r\n    public execute = function (source: string) {\r\n        this.clearErrors();\r\n        this.clearResults();\r\n        let tokens: string[] = this.lex(source);\r\n        this.storeIfDefine(tokens);\r\n        let ast: any = this.parse(tokens);\r\n        this.compile(ast)(this);\r\n    };\r\n\r\n    public run = function (ast: any) {\r\n        this.compile(ast)(this);\r\n    };\r\n\r\n    lexNew = function (src: string): Tokens[] {\r\n        let toks: Tokens[] = [];\r\n        let lexer = new Lexer(src);\r\n        let i = 0;\r\n        while (true) {\r\n            let token = lexer.next();\r\n            if (token === Token.EOF)\r\n                break;\r\n            if (token === Token.WHITESPACE || token === Token.NEWLINE || token === Token.COMMENT)\r\n                continue;\r\n            let value: string = \"\";\r\n            if (token === Token.STRING || token === Token.QUOTED_STRING) {\r\n                value = lexer.value();\r\n            } else {\r\n                value = tokToStr[Token[token]];\r\n            }\r\n            toks.push({ token: token, value: value });\r\n            i++;\r\n        }\r\n        return toks;\r\n    }\r\n\r\n    complieJoyDefines(source: string) {\r\n        function joyDefine(s: string, j: Joy) {\r\n            const xs = s.split(' ');\r\n            const len = xs.length;\r\n            if (len < 3) {\r\n                return;\r\n            }\r\n            if (xs[1] !== '==') {\r\n                return;\r\n            }\r\n            const body = xs.slice(2, len).join(' ');\r\n            const defineText = `[ ${body} ] \"${xs[0]}\" define`;\r\n            j.execute(defineText);\r\n        };\r\n\r\n        source.split(';').map(x => joyDefine(x.trim(), this));\r\n    }\r\n\r\n\r\n\r\n    public processJoySource = function (source: string) {\r\n\r\n        let tokens = this.lexNew(source);\r\n\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            switch (tokens[i].value) {\r\n                case \"LIBRA\":\r\n                case \"DEFINE\":\r\n                    i++;\r\n                    let s: string = \"\";\r\n                    while (i < tokens.length) {\r\n                        let tok = tokens[i].token;\r\n                        if (tok != Token.DOT) {\r\n                            s += ' ' + tokens[i].value;\r\n                            i++\r\n                            continue;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.complieJoyDefines(s);\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n} // Joy\r\n\r\n\r\n\r\ninterface Tokens {\r\n    token: Token\r\n    value: any\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/engine.ts","/**\n * Lexical scanner for the Joy language.\n */\n\nimport { isWhite, isDigit, isHexDigit, isAlphaNum } from \"./utility\";\nimport { Token, keywords } from \"./tokens\";\n\nexport class Lexer {\n    private src: string;\n    private si: number;\n    private _prev: number;\n    private _value: string;\n    private _keyword: Token;\n\n    constructor(src: string) {\n        this.src = src;\n        this.si = 0;\n        this._prev = 0;\n        this._value = \"\";\n        this._keyword = Token.UNKNOWN;\n    }\n\n    prev(): number {\n        return this._prev;\n    }\n\n    value(): string {\n        return this._value;\n    }\n\n    keyword(): Token | undefined {\n        return this._keyword;\n    }\n\n    next(): Token {\n        this._prev = this.si;\n        this._value = \"\";\n        this._keyword = Token.UNKNOWN;\n        if (this.si >= this.src.length)\n            return Token.EOF;\n        let c = this.src[this.si];\n        if (isWhite(c))\n            return this.whitespace();\n        this.si++;\n        switch (c) {\n            case '#':\n                return this.lineComment();\n            case '(':\n                return this.matchChar('*') ? this.spanComment() : Token.STRING\n            case ';':\n                return Token.SEMICOLON;\n            case '[':\n                return Token.L_BRACKET;\n            case ']':\n                return Token.R_BRACKET;\n            case '{':\n                return Token.L_CURLY;\n            case '}':\n                return Token.R_CURLY;\n            case ':':\n                return Token.COLON;\n            case '=':\n                return this.matchChar('=') ? Token.EQEQ : Token.STRING\n            case '\"':\n            case '\\'':\n                return this.quotedString(c);\n            case '.':\n                return Token.DOT;\n            default:\n                return this.identifier();\n        }\n    }\n\n    private whitespace(): Token {\n        let eol = false;\n        for (; isWhite(this.src[this.si]); ++this.si)\n            if (this.src[this.si] === '\\n' || this.src[this.si] === '\\r')\n                eol = true;\n        return eol ? Token.NEWLINE : Token.WHITESPACE;\n    }\n\n    private lineComment(): Token {\n        this.matchWhile(c => c !== '\\r' && c !== '\\n');\n        return Token.COMMENT;\n    }\n\n    private spanComment(): Token {\n        while (this.si < this.src.length &&\n            (this.src[this.si] !== '*' || this.src[this.si + 1] !== ')'))\n            ++this.si;\n        if (this.si < this.src.length)\n            this.si += 2;\n        return Token.COMMENT;\n    }\n\n    private quotedString(quote: string): Token {\n        let str = \"\\\"\";\n        while (this.si < this.src.length && this.src[this.si] !== quote)\n            str += this.escape();\n        this.matchChar(quote);\n        str += \"\\\"\";\n        this._value = str;\n        return Token.QUOTED_STRING;\n    }\n\n    private escape(): string {\n        if (!this.matchChar('\\\\'))\n            return this.src[this.si++];\n        let save = this.si;\n        let d1: number | null;\n        let d2: number | null;\n        let d3: number | null;\n        if (this.matchChar('n'))\n            return '\\n';\n        else if (this.matchChar('r'))\n            return '\\r';\n        else if (this.matchChar('t'))\n            return '\\t';\n        else if (this.matchChar('\\\\'))\n            return '\\\\';\n        else if (this.matchChar('\"'))\n            return '\"';\n        else if (this.matchChar('\\''))\n            return '\\'';\n        else if (this.matchChar('x') &&\n            null !== (d1 = this.digit(16)) && null !== (d2 = this.digit(16)))\n            return String.fromCharCode(16 * d1 + d2);\n        else if (null !== (d1 = this.digit(8)) && null !== (d2 = this.digit(8)) &&\n            null !== (d3 = this.digit(8)))\n            return String.fromCharCode(64 * d1 + 8 * d2 + d3);\n        else {\n            this.si = save;\n            return '\\\\';\n        };\n    }\n\n    private digit(radix: number): number | null {\n        const ASCII_ZERO = '0'.charCodeAt(0);\n        const ASCII_A = 'a'.charCodeAt(0);\n\n        let c = this.src[this.si++];\n        let dig = isDigit(c) ? c.charCodeAt(0) - ASCII_ZERO\n            : isHexDigit(c) ? 10 + c.toLowerCase().charCodeAt(0) - ASCII_A\n                : 99;\n        return (dig < radix) ? dig : null;\n    }\n\n\n    private identifier(): Token {\n        this.matchWhile(c => isAlphaNum(c) || c == '_' || c == '-');\n        this.setValue();\n        this._keyword = keywords[this._value!];\n        return this._keyword ? this._keyword : Token.STRING;\n    }\n\n    private matchChar(c: string): boolean {\n        if (this.src[this.si] !== c)\n            return false;\n        ++this.si;\n        return true;\n    }\n\n    private matchWhile(pred: (s: string) => boolean): boolean {\n        let start = this.si;\n        while (this.si < this.src.length && pred(this.src[this.si]))\n            ++this.si;\n        return this.si > start;\n    }\n\n    private setValue(): void {\n        this._value = this.src.substring(this._prev!, this.si);\n    }\n\n    // save to use later?\n    /*\n\n    private rawString(): Token {\n        this.matchWhile(c => c !== '`');\n        this.matchChar('`');\n        if (this._prev)\n            this._value = this.src.slice(this._prev + 1, this.si - 1);\n        return Token.STRING;\n    }\n\n    private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return Token.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n            this.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;    private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return     private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return Token.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n            this.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (this.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.ma    private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return Token.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n                private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return Token.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n            this.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (    private number(): Token {\n        --this.si;\n        if (this.hexNumber())\n            return Token.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n            this.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (this.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.matchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\nthis.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.matchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\nthis.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (this.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.matchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\ntchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\nToken.NUMBER;\n        this.matchWhile(isDigit);\n        if (this.matchChar('.'))\n            this.matchWhile(isDigit);\n        this.exponent();\n        if (this.src[this.si - 1] === '.')\n            --this.si; // don't absorb trailing period\n        this.setValue();\n        return Token.NUMBER;\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (this.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.matchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\n\n    }\n\n    private hexNumber(): boolean {\n        let save = this.si;\n        if (this.matchChar('0') && (this.matchChar('x') || this.matchChar('X')) &&\n            this.matchWhile(isHexDigit)) {\n            this.setValue();\n            return true;\n        }\n        this.si = save;\n        return false;\n    }\n\n    private exponent(): void {\n        let save = this.si;\n        if (this.matchChar('e') || this.matchChar('E')) {\n            this.matchIf(c => c === '+' || c === '-');\n            if (this.matchWhile(isDigit))\n                return;\n        }\n        this.si = save;\n    }\n\n    private matchString(s: string): boolean {\n        if (this.src.slice(this.si, this.si + s.length) !== s)\n            return false;\n        this.si += s.length;\n        return true;\n    }\n\n    private matchIf(pred: (s: string) => boolean): boolean {\n        if (this.si >= this.src.length || !pred(this.src[this.si]))\n            return false;\n        ++this.si;\n        return true;\n    }\n\n    */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lexer.ts","/**\n * Miscellaneous string functions\n */\n\nexport function isWhite(c: string = \"\"): boolean {\n    let a = c.charCodeAt(0);\n    return a === 32 || (9 <= a && a <= 13);\n}\n\nexport function isAlpha(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if (((code >= 65) && (code <= 90)) || ((code >= 97) && (code <= 122))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function isDigit(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if ((code >= 48) && (code <= 57)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function isOctalDigit(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if ((code >= 48) && (code <= 55)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function isHexDigit(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if (((code >= 48) && (code <= 57)) ||\n            ((code >= 65) && (code <= 70)) ||\n            ((code >= 97) && (code <= 102))) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function isAlphaNum(char: string): boolean {\n    return isAlpha(char) || isDigit(char);\n}\n\nexport function capitalize(s: string): string {\n    return s[0].toUpperCase() + s.slice(1);\n}\n\nexport function isLower(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if ((code > 96) && (code < 123))\n            return true;\n    }\n    return false;\n}\n\nexport function isUpper(char: string): boolean {\n    if (char && char.length === 1) {\n        let code = char.charCodeAt(0);\n        if ((code > 64) && (code < 91))\n            return true;\n    }\n    return false;\n}\n\n/** should be called with i pointing at backslash */\nexport function doesc(src: string, index: { i: number }): string {\n    function hexval(c: string): number {\n        let cCode = c.toLowerCase().charCodeAt(0);\n        return cCode <= 57 ? cCode - 48 : cCode - 97 + 10;\n    }\n    function octval(c: string): number {\n        return c.charCodeAt(0) - 48;\n    }\n    let dstCode: number;\n    index.i++;\n    switch (src[index.i]) {\n        case 'n':\n            return String.fromCharCode(10);\n        case 't':\n            return String.fromCharCode(9);\n        case 'r':\n            return String.fromCharCode(13);\n        case 'x':\n            if (isHexDigit(src[index.i + 1]) && isHexDigit(src[index.i + 2])) {\n                index.i += 2;\n                dstCode = 16 * hexval(src[index.i - 1]) + hexval(src[index.i]);\n                return String.fromCharCode(dstCode);\n            } else\n                break;\n        case '\\\\':\n        case '\"':\n        case '\\'':\n            return src[index.i];\n        default:\n            if (isOctalDigit(src[index.i]) && isOctalDigit(src[index.i + 1]) &&\n                isOctalDigit(src[index.i + 2])) {\n                index.i += 2;\n                dstCode = 64 * octval(src[index.i - 2]) +\n                    8 * octval(src[index.i - 1]) + octval(src[index.i]);\n                return String.fromCharCode(dstCode);\n            }\n    }\n    index.i--;\n    return src[index.i];\n}\n\nexport type Cmp = -1 | 0 | 1;\n\nexport function cmp(x: any, y: any): Cmp {\n    if (x < y)\n        return -1;\n    else if (x > y)\n        return 1;\n    else\n        return 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utility.ts","import { Joy } from \"./engine\"\n\n// load joy primitives into and instance of the engine\nexport function initialJoyprimitives(j: Joy) {\n\n    // used for testing new code\n    j.primitive('aaa', () => {\n        // const source = \"\\\"(* Sample application for editor *)\\n\\n\\\\\\\"(* FILE:   samplelib.joy *)\\n\\nLIBRA\\n\\n    _samplelib == true; \\n\\n(* more \\n   comments *)\\n\\n    new-sum == \\n        0 \\n        [ + ] \\n        fold;   # redefine sum # #############\\n\\n    new-prod == 1 [ * ] fold;  # another comment \\n\\n    test1 == \\\\\\\"aaa \\\\\\\\\\\"bbb\\\\\\\\\\\" ccc\\\\\\\";\\n    test2 == \\\\\\\"aaa  (* ccc *) ##\\\\\\\";\\n\\n    SAMPLELIB == \\\\\\\"samplelib.joy - simple sample library\\\\n\\\\\\\".\\n\\n(* end LIBRA *)\\n\\n\\\\\\\"samplelib is loaded\\\\n\\\\\\\" putchars.\\n\\\"\\n\\n(* \\n    libload - read file and add to defines\\n\\n    DEFINE -\\n        no lines between statements\\n        ';' termination except last '.'\\n*)\\n\\nDEFINE\\n    square == dup *;\\n    quad == square\\n            square;\\n    quad-list == [ quad ] map;\\n    quad-prod-sum-diff == quad-list dup new-prod swap new-sum -.\\n\\n[1 2 3 4 5] quad-prod-sum-diff.\\n\\n\\n\\\"\";\n        const source = \"(* Sample application for editor *)\\n\\n (* FILE:   samplelib.joy *)\\n\\nLIBRA\\n\\n    _samplelib == true; n\\n(* more \\n   comments *)\\n\\n    new-sum == \\n        0 \\n        [ + ] \\n        fold;   # redefine sum # #############\\n\\n    new-prod == 1 [ * ] fold;  # another comment \\n\\n    test1 == \\\"aaa \\\\\\\"bbb\\\\\\\" ccc\\\";\\n    test2 == \\\"aaa  (* ccc *) ##\\\";\\n\\n    SAMPLELIB == \\\"samplelib.joy - simple sample library\\n\\\".\\n\\n(* end LIBRA *)\\n\\n\\\"samplelib is loaded\\\\n\\\" putchars.\\n \\n\\n (* \\n    libload - read file and add to defines\\n\\n    DEFINE -\\n        no lines between statements\\n        ';' termination except last '.'\\n*)\\n\\nDEFINE\\n    square == dup *;\\n    quad == square\\n            square;\\n    quad-list == [ quad ] map;\\n    quad-prod-sum-diff == quad-list dup new-prod swap new-sum -.\\n\\n[1 2 3 4 5] quad-prod-sum-diff.\\n\\n\\n\";\n        // const source = ' \\\" a \\\\\"b\\\\\" c \\\" ';\n\n        j.processJoySource(source);\n\n    });\n\n    // language\n    j.primitive('define', (quote: any, name: string) => { j.define(quote, name); });\n\n    // stack\n    j.primitive('pop', () => { j.popStack(); });\n    j.primitive('.', (x: any) => {\n        let output = j.print(x);\n        if (typeof (x) === \"object\" && x.kind === 'list') {\n            output = `[ ${output}]`;\n        }\n        j.pushResult(output)\n    });\n\n    j.primitive('dup', (x: any) => {\n        const ret: any = [x, x];\n        ret.kind = 'tuple';\n        return ret;\n    });\n\n    j.primitive('swap', (y: any, x: any) => {\n        const ret: any = [x, y];\n        ret.kind = 'tuple';\n        return ret;\n    });\n\n    // stdout/stdin\n    j.primitive('putchars', (x: string) => {\n        if (typeof x !== 'string') {\n            j.pushError('string needed for putchars');\n            return;\n        }\n        j.concatDisplayConsole(j.print(x));\n    });\n\n    // combinators\n    j.primitive('dip', (x: any, q: any) => {\n        j.run(q);\n        j.pushStack(x);\n    });\n\n    // arithmetic\n    j.primitive('+', (y: any, x: number) => {\n        if (typeof y === 'string' && y.length === 1 && typeof x === 'number') {\n            return String.fromCharCode(y.charCodeAt(0) + x);\n        }\n        if (!is2Numbers(x, y)) {\n            j.pushError(\"opperands for '+' must be numbers\");\n            return 0;\n        }\n        return y + x;\n    });\n\n    j.primitive('-', (y: any, x: number) => {\n        if (typeof y === 'string' && y.length === 1 && typeof x === 'number') {\n            return String.fromCharCode(y.charCodeAt(0) - x);\n        }\n        if (!is2Numbers(x, y)) {\n            j.pushError(\"opperands for '-' must be numbers\");\n            return 0;\n        }\n        return y - x;\n    });\n\n    j.primitive('*', (y: number, x: number) => {\n        if (!is2Numbers(x, y)) {\n            j.pushError(\"opperands for '*' must be numbers\");\n            return 0;\n        }\n        return y * x;\n    });\n\n    j.primitive('/', (y: number, x: number) => {\n        if (!is2Numbers(x, y)) {\n            j.pushError(\"opperands for '/' must be numbers\");\n            return 0;\n        }\n        if (x === 0) {\n            j.pushError(\"divisor for '/' must not be 0\");\n            return 0;\n        }\n        return y / x;\n    });\n\n    j.primitive('rem', (y: number, x: number) => {\n        if (!is2Numbers(x, y)) {\n            j.pushError(\"opperands for 'rem' must be numbers\");\n            return;\n        }\n        j.pushStack(y % x);\n    });\n\n    // comparison\n    j.primitive('=', (y: any, x: any) => { j.pushStack(y === x) });\n    j.primitive('<', (y: any, x: any) => { j.pushStack(y < x) });\n    j.primitive('>', (y: any, x: any) => { j.pushStack(y > x) });\n    j.primitive('<=', (y: any, x: any) => { j.pushStack(y <= x) });\n    j.primitive('>=', (y: any, x: any) => { j.pushStack(y >= x) });\n\n    // boolean/conditional\n    j.primitive('true', (x: any) => { j.pushStack(true) });\n    j.primitive('false', (x: any) => { j.pushStack(false) });\n    j.primitive('not', (x: any) => { j.pushStack(!x) });\n    j.primitive('and', (y: any, x: any) => { j.pushStack(y && x) });\n    j.primitive('or', (y: any, x: any) => { j.pushStack(y || x) });\n    j.primitive('xor', (y: any, x: any) => { j.pushStack((y || x) && !(y && x)) });\n    j.primitive('iflist', (x: any) => { j.pushStack(typeof x === 'object' && x.kind === 'list') });\n    j.primitive('ifinteger', (x: number) => { j.pushStack(typeof x === 'number' && x % 1 === 0) });\n    j.primitive('iffloat', (x: number) => { j.pushStack(typeof x === 'number' && x % 1 !== 0) });\n    j.primitive('ifstring', (x: string) => { j.pushStack(typeof x === 'string') });\n    j.primitive('ifte', (x: any, p: boolean, q: any) => {\n        j.run(x);\n        const predicate = j.popStack();\n        j.run(predicate ? p : q);\n    });\n\n    // lists\n    j.primitive('size', (x: any) => x.length);\n\n    j.primitive('cons', (x: any, xs: any) => {\n        if (typeof x === 'string' && x.length === 1 && typeof xs === 'string') {\n            return x + xs;\n        }\n        if (typeof x === 'object' || !(typeof xs === 'object' && xs.kind === 'list')) {\n            j.pushError(\"arguments for 'cons' must be a literal followed by a list/quotation\");\n            return xs;\n        }\n        xs.unshift({ val: x, kind: 'literal', disp: x.toString() });\n        return xs;\n    });\n\n    j.primitive('snoc', (xs: any) => {\n        if (typeof xs === 'string' && xs.length > 0) {\n            j.pushStack(xs[0]);\n            return xs.slice(1);\n        }\n        if (!(typeof xs === 'object' && xs.kind === 'list')) {\n            j.pushError(\"argument for 'snoc' must be a non-empty list/quotation/string\");\n            return xs;\n        }\n        const x = xs.shift();\n        j.pushStack(x.val);\n        return xs;\n    });\n\n    j.primitive('concat', (xs: any, ys: any) => {\n        if (typeof xs !== typeof ys) {\n            j.pushError(\"arguments for 'conat' must be the same type\");\n            return xs;\n        }\n        if (typeof xs === 'string' && typeof ys === 'string') {\n            return xs.concat(ys);\n        }\n        if (xs.kind !== 'list' || ys.kind !== 'list') {\n            j.pushError(\"arguments for 'conat' must be a lists and/or quatations\");\n            return xs;\n        }\n        for (let i = 0; i < ys.length; i += 1) {\n            xs.push(ys[i]);\n        }\n        return xs;\n    });\n\n    j.primitive('range', (y: number, x: number) => {\n        const r: any = [];\n        r.kind = 'list';\n        for (let i = x; i <= y; i += 1) {\n            r.push({ kind: 'literal', disp: i.toString(), val: i });\n        }\n        j.pushStack(r);\n    });\n\n    j.primitive('map', (xs: any, q: any) => {\n        let ys = '';\n        const xsCopy = xs;\n        switch (typeof xs) {\n            case 'string':\n                for (let i = 0; i < xs.length; i += 1) {\n                    j.pushStack(xs[i]);\n                    j.run(q);\n                    const v = j.popStack();\n                    ys += v;\n                }\n                j.pushStack(ys);\n                break;\n            case 'object':\n                if (xs.kind === 'list') {\n                    for (let i = 0; i < xs.length; i += 1) {\n                        j.pushStack(xsCopy[i].val);\n                        j.run(q);\n                        const v = j.popStack();\n                        xsCopy[i].val = v;\n                        xsCopy[i].disp = v.toString();\n                    }\n                    j.pushStack(xs);\n                }\n                break;\n            default:\n                j.pushError(\"first argument of 'map' must be a string or list/quotation\");\n        }\n    });\n\n    j.primitive('filter', (xs: any, q: any) => {\n        let ys = '';\n        switch (typeof xs) {\n            case 'string':\n                for (let i = 0; i < xs.length; i += 1) {\n                    j.pushStack(xs[i]);\n                    j.run(q);\n                    if (j.popStack()) ys += xs[i];\n                }\n                j.pushStack(ys);\n                break;\n            case 'object':\n                if (xs.kind === 'list') {\n                    const f: any = [];\n                    f.kind = 'list';\n                    for (let i = 0; i < xs.length; i += 1) {\n                        const x = xs[i];\n                        j.pushStack(x.val);\n                        j.run(q);\n                        if (j.popStack()) f.push(x);\n                    }\n                    j.pushStack(f);\n                }\n                break;\n            default:\n                j.pushError(\"first argument of 'filter' must be a string or list/quotation\");\n        }\n    });\n\n    j.primitive('fold', (xs: any, b: any, q: any) => {\n        let a = b;\n        switch (typeof xs) {\n            case 'string':\n                for (let i = 0; i < xs.length; i += 1) {\n                    j.pushStack(a);\n                    j.pushStack(xs[i]);\n                    j.run(q);\n                    a = j.popStack();\n                }\n                j.pushStack(a);\n                break;\n            case 'object':\n                if (xs.kind === 'list') {\n                    for (let i = 0; i < xs.length; i += 1) {\n                        j.pushStack(a);\n                        j.pushStack(xs[i].val);\n                        j.run(q);\n                        a = j.popStack();\n                    }\n                    j.pushStack(a);\n                }\n                break;\n            default:\n                j.pushError(\"first argument of 'fold' must be a string or list/quotation\");\n        }\n    });\n\n    j.primitive('words', () => {\n        const words: any = [];\n        words.kind = 'list';\n\n        j.words().forEach(key => {\n            const func = j.word(key);\n            if (func.kind === 'primitive') {\n                words.push(func);\n            }\n        });\n\n        words.sort((a: any, b: any) => {\n            if (a.disp > b.disp) return 1;\n            if (a.disp < b.disp) return -1;\n            return 0;\n        });\n        return words;\n    });\n\n    j.primitive('defines', () => {\n        const xs: any = [];\n        xs.kind = 'list';\n\n        j.words().forEach(key => {\n            const func = j.word(key);\n            if (func.kind === 'secondary') {\n                xs.push(func);\n            }\n        });\n\n        xs.sort((a: any, b: any) => {\n            if (a.disp > b.disp) return 1;\n            if (a.disp < b.disp) return -1;\n            return 0;\n        });\n        return xs;\n    });\n\n    // utility function\n    function is2Numbers(x: any, y: any) {\n        return typeof x === 'number' && typeof y === 'number';\n    }\n\n} // initialJoyprimitives\n\n\n// WEBPACK FOOTER //\n// ./src/primitives.ts","import { Joy } from \"./engine\"\n\n// load joy primitives into and instance of the engine\nexport function loadCoreLibries(j: Joy) {\n\n  // core\n  j.execute('[ [ ] ifte ]                           \"when\"      define')\n  j.execute('[ [ ] swap ifte ]                      \"unless\"    define')\n  j.execute('[ [ dup ] dip ]                        \"dupd\"      define')\n  j.execute('[ [ keep ] dip apply ]                 \"cleave\"    define')\n  j.execute('[ [ swap ] dip ]                       \"swapd\"     define')\n  j.execute('[ [ true ] swap when ]                 \"apply\"     define')\n  j.execute('[ 0 swap - ]                           \"neg\"       define')\n  j.execute('[ dup 0 < [ neg ] when ]               \"abs\"       define')\n  j.execute('[ dupd dip ]                           \"keep\"      define')\n  j.execute('[ pop pop ]                            \"pop2\"      define')\n  j.execute('[ pop pop pop ]                        \"pop3\"      define')\n  j.execute('[ rolldown rolldown ]                  \"rollup\"    define')\n  j.execute('[ swapd swap ]                         \"rolldown\"  define')\n\n  // added for joy compatibility\n  j.execute('[ swap cons ]                          \"swons\"     define')\n  j.execute('[ [pop] dip ]                          \"popd\"      define')\n  j.execute('[ snoc pop ]                           \"first\"     define')\n  j.execute('[ snoc swap pop ]                      \"rest\"      define')\n\n  // from joy proper libraries, added for testing\n  j.execute('[ [ dup \"a\" >= ] [ 32 - ] [ ] ifte ]      \"to-upper\"             define')\n  j.execute('[ [ dup \"a\" < ]  [ 32 + ] [ ] ifte ]      \"to-lower\"             define')\n  // j.execute('[ \"Monday\" \"Tuesday\" \"Wednesday\" \"Thursday\" \"Friday\" \"Saturday\" \"Sunday\" ] \"weekdays\" define')\n\n  /* eliminated\n    j.execute('[ [ 2dip ] 2dip [ dip ] dip apply ]    \"tri*\"      define');\n    j.execute('[ [ 2dip ] dip apply ]                 \"2cleave*\"  define');\n    j.execute('[ [ 2dup ] dip 2dip ]                  \"2keep\"     define');\n    j.execute('[ [ 2keep ] 2dip [ 2keep ] dip apply ] \"2tri\"      define');\n    j.execute('[ [ 2keep ] dip apply ]                \"2cleave\"   define');\n    j.execute('[ [ 3dup ] dip 3dip ]                  \"3keep\"     define');\n    j.execute('[ [ 3keep ] 2dip [ 3keep ] dip apply ] \"3tri\"      define');\n    j.execute('[ [ 3keep ] dip apply ]                \"3cleave\"   define');\n    j.execute('[ [ 4dip ] 2dip [ 2dip ] dip apply ]   \"2tri*\"     define');\n    j.execute('[ [ dip ] dip apply ]                  \"cleave*\"   define');\n    j.execute('[ [ dup ] dip swap ]                   \"over\"      define');\n    j.execute('[ [ keep ] 2dip [ keep ] dip apply ]   \"tri\"       define');\n    j.execute('[ [ over ] dip swap ]                  \"pick\"      define');\n    j.execute('[ [ pop2 ] dip ]                       \"2nip\"      define');\n    j.execute('[ [ sum ] [ size ] cleave / ]          \"average\"   define');\n    j.execute('[ 0 [ + ] fold ]                       \"sum\"       define');\n    j.execute('[ 1 [ * ] fold ]                       \"prod\"      define');\n    j.execute('[ 1 range prod ]                       \"factorial\" define');\n    j.execute('[ cleave@ and ]                        \"both?\"     define');\n    j.execute('[ cleave@ or ]                         \"either?\"   define');\n    j.execute('[ dup * ]                              \"square\"    define');\n    j.execute('[ dup 2dip apply ]                     \"cleave@\"   define');\n    j.execute('[ dup 3dip apply ]                     \"2cleave@\"  define');\n    j.execute('[ dup 3dip dup 2dip apply ]            \"tri@\"      define');\n    j.execute('[ dup 4dip apply ]                     \"2tri@\"     define');\n    j.execute('[ over over ]                          \"2dup\"      define');\n    j.execute('[ pick pick pick ]                     \"3dup\"      define');\n    j.execute('[ swap [ 2dip ] dip ]                  \"3dip\"      define');\n    j.execute('[ swap [ 3dip ] dip ]                  \"4dip\"      define');\n    j.execute('[ swap [ dip ] dip ]                   \"2dip\"      define');\n    j.execute('[ swap pop ]                           \"nip\"       define');\n    */\n\n  $(document).ready(function () {\n    console.debug('document ready');\n    var joyStr = contentProviderCallback();\n    j.processJoySource(joyStr);\n    $(\"#dropdown-search\").empty();\n    var defs = j.getDefines();\n    console.debug('populating dictionary dropdown');\n    for (var _i = 0, _a = Object.entries(defs); _i < _a.length; _i++) {\n      var _b = _a[_i], k = _b[0], v = _b[1];\n      $(\"#dropdown-dictionary\").append(\"<a class=\\\"drop-element\\\" href=\\\"#\" + k + \"\\\">\" + k + \" == \" + v + \"</a>\");\n    }\n  });\n\n} // loadCoreLibries\n\nvar getJoyFileString: any;\n\nfunction contentProviderCallback() {\n  console.debug('executing content provider callback');\n  //Note: getJoyFileString is a script function within the vscode content provider \n  return getJoyFileString();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/joylibs.ts"],"sourceRoot":""}